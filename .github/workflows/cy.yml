name: Validate Features Branch

on:
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        docker --version  # Confirm Docker is installed
        df -h             # Check available disk space
        free -m           # Check available memory

    - name: Build Docker Image
      run: |
        docker build --pull --rm -f "Dockerfile" -t ticsctests:latest "." || \
        (echo "Docker build failed. Reviewing logs:" && exit 1)

    - name: Debug MATLAB Runtime Location
      run: |
        echo "Searching for MATLAB Runtime..."
        COMMON_PATHS=(
          "/usr/local/MATLAB"
          "/opt/MATLAB"
          "/usr/local/MATLAB_Runtime"
          "/opt/MATLAB_Runtime"
        )
        for path in "${COMMON_PATHS[@]}"; do
          if [ -d "$path" ]; then
            echo "Found MATLAB installation at: $path"
            find "$path" -name "libmwmclmcrrt.so*" 2>/dev/null || echo "No runtime libraries found in $path"
          else
            echo "Directory $path does not exist."
          fi
        done

    - name: Run Unit Tests Inside Docker
      run: |
        docker run --rm ticsctests bash -c "simnibs_python -m pytest ti-csc/utils/tests/unit" || \
        (echo "Unit tests failed. Reviewing logs:" && exit 1)

    - name: Run Integration Tests Inside Docker
      run: |
        docker run --rm ticsctests bash -c "\
          chmod +x /ti-csc/utils/tests/integration/test_analyzerIT.sh && \
          /ti-csc/utils/tests/integration/test_analyzerIT.sh || \
          (echo 'Integration tests failed. Reviewing logs:' && exit 1)"
      
    - name: Cleanup Docker
      if: always()
      run: |
        docker system prune --all --force
