name: Validate Features Branch

on:
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        docker --version  # Confirm Docker is installed
        df -h             # Check available disk space
        free -m           # Check available memory

    - name: Build Docker Image
      run: |
        docker build --pull --rm -f "Dockerfile" -t ticsctests:latest "." || \
        (echo "Docker build failed. Reviewing logs:" && exit 1)

    - name: Run Docker Container and Debug
      run: |
      
        # Run the container interactively for debugging
        docker run --rm -d --name ticsctests_debug ticsctests:latest sleep 30

        # Function to check if a directory or file exists
        check_path() {
          echo "Checking path: $1"
          docker exec ticsctests_debug ls -ld "$1" 2>/dev/null || echo "Path $1 does not exist or is inaccessible."
        }

        # Check each directory incrementally
        echo "Checking /usr:"
        check_path /usr

        echo "Checking /usr/local:"
        check_path /usr/local

        echo "Checking /usr/local/MATLAB:"
        check_path /usr/local/MATLAB

        echo "Checking /usr/local/MATLAB/MATLAB_Runtime:"
        check_path /usr/local/MATLAB/MATLAB_Runtime

        echo "Checking /usr/local/MATLAB/MATLAB_Runtime/R2024a:"
        check_path /usr/local/MATLAB/MATLAB_Runtime/R2024a

        echo "Checking /usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime:"
        check_path /usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime

        echo "Checking /usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime/glnxa64:"
        check_path /usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime/glnxa64

        # Finally, check for the specific runtime library file
        echo "Searching for libmwmclmcrrt.so.24.1:"
        docker exec ticsctests_debug find /usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime/glnxa64 -name "libmwmclmcrrt.so.24.1" 2>/dev/null || echo "libmwmclmcrrt.so.24.1 not found."

        # Clean up the Docker container
        docker rm -f ticsctests_debug
  
    - name: Run Unit Tests Inside Docker
      run: |
        docker run --rm ticsctests bash -c "simnibs_python -m pytest ti-csc/utils/tests/unit" || \
        (echo "Unit tests failed. Reviewing logs:" && exit 1)

    - name: Run Integration Tests Inside Docker
      run: |
        docker run --rm ticsctests bash -c "\
          chmod +x /ti-csc/utils/tests/integration/test_analyzerIT.sh && \
          /ti-csc/utils/tests/integration/test_analyzerIT.sh || \
          (echo 'Integration tests failed. Reviewing logs:' && exit 1)"

    - name: Cleanup Docker
      if: always()
      run: |
        docker system prune --all --force
