name: Validate Features Branch

on:
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        docker --version  # Confirm Docker is installed
        df -h             # Check available disk space
        free -m           # Check available memory

    - name: Build Docker Image
      run: |
        docker build --pull --rm -f "Dockerfile" -t ticsctests:latest "." || \
        (echo "Docker build failed. Reviewing logs:" && exit 1)

    - name: Run Unit Tests Inside Docker
    
      run: |
        docker run --rm ticsctests bash -c "simnibs_python -m pytest ti-csc/utils/tests/unit" || \
        (echo "Unit tests failed. Reviewing logs:" && exit 1)
        docker run --rm ticsctests bash -c "bats ti-csc/utils/tests/unit/" || \
        (echo "Unit tests failed. Reviewing logs:" && exit 1)

    - name: Run Integration Tests Inside Docker
      if: always()  # Ensures this step runs no matter the status of previous steps
      run: |
        docker run -v /usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime/glnxa64/libmwmclmcrrt.so.24.1:/usr/local/MATLAB/MATLAB_Runtime/R2024a/runtime/glnxa64/libmwmclmcrrt.so.25.1 --rm ticsctests bash -c "\
          chmod +x /ti-csc/utils/tests/integration/test_analyzerIT.sh && \
          /ti-csc/utils/tests/integration/test_analyzerIT.sh || \
          (echo 'Integration tests failed. Reviewing logs:' && exit 1)"

    - name: Cleanup Docker
      if: always()
      run: |
        docker system prune --all --force
